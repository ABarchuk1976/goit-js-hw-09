{"mappings":"YAAA,IAAMA,EAAUC,SAASC,cAAc,SA2BvCF,EAAQG,iBAAiB,UAAU,SAAAC,G,kBAe/BC,YAAW,WACTC,QAAQC,IAAIC,EAAUC,EAAYC,EAAWC,GAC7CN,YAAW,YAlCjB,SAAuBG,EAAUI,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,IAAM,CAAEX,WAAUI,SAElBN,QAAQC,IAAIS,GAERA,EAEFF,EAAQK,KAGRJ,EAAOI,SAuBLC,CAAcZ,EAAUC,EAAaC,EAAYF,GAC9Ca,MAAK,SAAAC,G,OA5CE,SAACd,EAAUI,GAC3BW,SAASC,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANd,EAAM,OA2CjDe,CAAUL,EAAId,SAAUc,EAAIV,UACxCgB,OAAM,SAAAC,G,OAzCA,SAACrB,EAAUI,GAC1BW,SAASC,OAAOM,QAAQ,sBAAuCJ,OAAflB,EAAS,QAAYkB,OAANd,EAAM,OAwC7CmB,CAASF,EAAMrB,SAAUqB,EAAMjB,YAChDH,KACFC,IArBLJ,QAAQC,IAAIH,GACZA,EAAM,iBAEN,IAEuB4B,EAAnB5B,EAAM6B,cADRC,SAAYtB,EAAKoB,EAALpB,MAAOuB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGrB3B,EAAa4B,OAAOzB,EAAM0B,OAC1B5B,EAAY2B,OAAOF,EAAKG,OACxB3B,EAAc0B,OAAOD,EAAOE,OAElChC,QAAQC,IAAIE,EAAYC,EAAWC,GAEnC,IAAK,IAAI4B,EAAW,EAAGA,GAAY5B,EAAa4B,GAAY,EAACC,EAAAD,GAW7DnC,EAAM6B,cAAcQ,W","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nconst onSuccess = (position, delay) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onReject = (position, delay) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    obj = { position, delay };\n\n    console.log(shouldResolve);\n\n    if (shouldResolve) {\n      // Fulfill\n      resolve(obj);\n    } else {\n      // Reject\n      reject(obj);\n    }\n  });\n}\n\nformRef.addEventListener('submit', event => {\n  console.log(event);\n  event.рreventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  console.log(delayValue, stepValue, amountValue);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    setTimeout(() => {\n      console.log(position, delayValue, stepValue, amountValue);\n      setTimeout(() => {\n        createPromise(position, delayValue + stepValue * position)\n          .then(res => onSuccess(res.position, res.delay))\n          .catch(error => onReject(error.position, error.delay));\n      }, delayValue);\n    }, stepValue);\n  }\n\n  event.currentTarget.reset();\n});\n"],"names":["$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","event","setTimeout","console","log","position","delayValue","stepValue","amountValue","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","$ce04d3a99e08e73b$var$createPromise","then","res","Notiflix","Notify","success","concat","$ce04d3a99e08e73b$var$onSuccess","catch","error","failure","$ce04d3a99e08e73b$var$onReject","_elements","currentTarget","elements","step","amount","Number","value","position1","_loop","reset"],"version":3,"file":"03-promises.ca922b1d.js.map"}