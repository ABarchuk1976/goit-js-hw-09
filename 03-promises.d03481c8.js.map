{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,SAEjCC,EAAY,CAACC,EAAUC,KAC3BC,SAASC,OAAOC,QAAQ,uBAAqBJ,QAAiBC,QAG1DI,EAAW,CAACL,EAAUC,KAC1BC,SAASC,OAAOG,QAAQ,sBAAoBN,QAAiBC,QAG/D,SAASM,EAAcP,EAAUC,GAC/B,OAAO,IAAIO,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,IAAM,C,SAAEd,E,MAAUC,GAElBc,QAAQC,IAAIL,GAERA,EAEFF,EAAQK,KAGRJ,EAAOI,QAKblB,EAAQqB,iBAAiB,UAAUC,IACjCH,QAAQC,IAAIE,GACZA,EAAM,iBAEN,MACEC,UAAUlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,IACvBH,EAAMI,cAEJC,EAAaC,OAAOvB,EAAMwB,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElCV,QAAQC,IAAIO,EAAYG,EAAWC,GAEnC,IAAK,IAAI3B,EAAW,EAAGA,GAAY2B,EAAa3B,GAAY,EAC1D4B,YAAW,KACTb,QAAQC,IAAIhB,EAAUuB,EAAYG,EAAWC,GAC7CC,YAAW,KACTrB,EAAcP,EAAUuB,EAAaG,EAAY1B,GAC9C6B,MAAKC,GAAO/B,EAAU+B,EAAI9B,SAAU8B,EAAI7B,SACxC8B,OAAMC,GAAS3B,EAAS2B,EAAMhC,SAAUgC,EAAM/B,WAChDsB,KACFG,GAGLR,EAAMI,cAAcW","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nconst onSuccess = (position, delay) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onReject = (position, delay) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    obj = { position, delay };\n\n    console.log(shouldResolve);\n\n    if (shouldResolve) {\n      // Fulfill\n      resolve(obj);\n    } else {\n      // Reject\n      reject(obj);\n    }\n  });\n}\n\nformRef.addEventListener('submit', event => {\n  console.log(event);\n  event.рreventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  console.log(delayValue, stepValue, amountValue);\n\n  for (let position = 1; position <= amountValue; position += 1) {\n    setTimeout(() => {\n      console.log(position, delayValue, stepValue, amountValue);\n      setTimeout(() => {\n        createPromise(position, delayValue + stepValue * position)\n          .then(res => onSuccess(res.position, res.delay))\n          .catch(error => onReject(error.position, error.delay));\n      }, delayValue);\n    }, stepValue);\n  }\n\n  event.currentTarget.reset();\n});\n"],"names":["$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$onSuccess","position","delay","Notiflix","Notify","success","$47d4ff9957288465$var$onReject","failure","$47d4ff9957288465$var$createPromise","Promise","resolve","reject","shouldResolve","Math","random","obj","console","log","addEventListener","event","elements","step","amount","currentTarget","delayValue","Number","value","stepValue","amountValue","setTimeout","then","res","catch","error","reset"],"version":3,"file":"03-promises.d03481c8.js.map"}